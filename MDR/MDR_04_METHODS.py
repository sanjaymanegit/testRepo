


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QMenu, QVBoxLayout, QSizePolicy, QMessageBox, QWidget, QPushButton
from PyQt5.Qt import QTableWidgetItem
import serial,time
import datetime
import sqlite3
from PyQt5.QtCore import QRegExp
from PyQt5.QtGui import QRegExpValidator


class mdr_04_Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1367, 768)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(20, 10, 1321, 701))
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame.setLineWidth(3)
        self.frame.setObjectName("frame")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(830, 130, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("color: rgb(0, 85, 127);")
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(self.frame)
        self.lineEdit.setGeometry(QtCore.QRect(1000, 130, 281, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit.setFont(font)
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(self.frame)
        self.pushButton.setGeometry(QtCore.QRect(30, 320, 101, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.frame)
        self.pushButton_2.setGeometry(QtCore.QRect(420, 320, 101, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.label_3 = QtWidgets.QLabel(self.frame)
        self.label_3.setGeometry(QtCore.QRect(400, 40, 351, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color: rgb(170, 85, 127);")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.frame)
        self.label_4.setGeometry(QtCore.QRect(40, 20, 311, 61))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(22)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.frame)
        self.label_5.setGeometry(QtCore.QRect(1080, 10, 211, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("color: rgb(0, 0, 255);")
        self.label_5.setObjectName("label_5")
        self.label_2 = QtWidgets.QLabel(self.frame)
        self.label_2.setGeometry(QtCore.QRect(830, 180, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_2.setObjectName("label_2")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.frame)
        reg_ex = QRegExp("(\\d+\\.\\d+)")
        input_validator = QRegExpValidator(reg_ex, self.lineEdit_2)
        self.lineEdit_2.setValidator(input_validator)
        self.lineEdit_2.setGeometry(QtCore.QRect(1000, 180, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_6 = QtWidgets.QLabel(self.frame)
        self.label_6.setGeometry(QtCore.QRect(830, 230, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.frame)
        self.label_7.setGeometry(QtCore.QRect(1130, 180, 51, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_7.setObjectName("label_7")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.frame)
        reg_ex = QRegExp("(\\d+\\.\\d+)")
        input_validator = QRegExpValidator(reg_ex, self.lineEdit_3)
        self.lineEdit_3.setValidator(input_validator)
        self.lineEdit_3.setGeometry(QtCore.QRect(1000, 230, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.label_8 = QtWidgets.QLabel(self.frame)
        self.label_8.setGeometry(QtCore.QRect(1130, 230, 51, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.frame)
        self.label_9.setGeometry(QtCore.QRect(830, 280, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_9.setObjectName("label_9")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.frame)
        reg_ex = QRegExp("(\\d+)")
        input_validator = QRegExpValidator(reg_ex, self.lineEdit_4)
        self.lineEdit_4.setValidator(input_validator)
        self.lineEdit_4.setGeometry(QtCore.QRect(1000, 280, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.label_10 = QtWidgets.QLabel(self.frame)
        self.label_10.setGeometry(QtCore.QRect(1130, 280, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.frame)
        self.label_11.setGeometry(QtCore.QRect(830, 330, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_11.setFont(font)
        self.label_11.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_11.setObjectName("label_11")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.frame)
        reg_ex = QRegExp("(\\d+\\.\\d+)")
        input_validator = QRegExpValidator(reg_ex, self.lineEdit_5)
        self.lineEdit_5.setValidator(input_validator)
        self.lineEdit_5.setGeometry(QtCore.QRect(1000, 330, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_5.setFont(font)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.line = QtWidgets.QFrame(self.frame)
        self.line.setGeometry(QtCore.QRect(0, 370, 1321, 20))
        self.line.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line.setLineWidth(3)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setObjectName("line")
        self.pushButton_3 = QtWidgets.QPushButton(self.frame)
        self.pushButton_3.setGeometry(QtCore.QRect(160, 320, 101, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.frame)
        self.pushButton_4.setGeometry(QtCore.QRect(290, 320, 101, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setObjectName("pushButton_4")
        self.tableWidget = QtWidgets.QTableWidget(self.frame)
        self.tableWidget.setGeometry(QtCore.QRect(30, 100, 711, 201))
        self.tableWidget.setStyleSheet("background-color: rgb(219, 255, 239);")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(7)
        self.tableWidget.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        item.setFont(font)
        self.tableWidget.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        item.setFont(font)
        self.tableWidget.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        item.setFont(font)
        self.tableWidget.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        item.setFont(font)
        self.tableWidget.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        item.setFont(font)
        self.tableWidget.setItem(0, 4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        item.setFont(font)
        self.tableWidget.setItem(0, 5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        item.setFont(font)
        self.tableWidget.setItem(0, 6, item)
        self.frame_2 = QtWidgets.QFrame(self.frame)
        self.frame_2.setGeometry(QtCore.QRect(20, 400, 1281, 281))
        self.frame_2.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_2.setObjectName("frame_2")
        self.tableWidget_2 = QtWidgets.QTableWidget(self.frame_2)
        self.tableWidget_2.setGeometry(QtCore.QRect(20, 50, 611, 191))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.tableWidget_2.setFont(font)
        self.tableWidget_2.setStyleSheet("background-color: rgb(219, 255, 239);")
        self.tableWidget_2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.tableWidget_2.setLineWidth(2)
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(7)
        self.tableWidget_2.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget_2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget_2.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget_2.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget_2.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget_2.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget_2.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.tableWidget_2.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        item.setFont(font)
        self.tableWidget_2.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        item.setFont(font)
        self.tableWidget_2.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        item.setFont(font)
        self.tableWidget_2.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        item.setFont(font)
        self.tableWidget_2.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        item.setFont(font)
        self.tableWidget_2.setItem(0, 4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        item.setFont(font)
        self.tableWidget_2.setItem(0, 5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        item.setFont(font)
        self.tableWidget_2.setItem(0, 6, item)
        self.label_14 = QtWidgets.QLabel(self.frame_2)
        self.label_14.setGeometry(QtCore.QRect(20, 10, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_14.setFont(font)
        self.label_14.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(self.frame_2)
        self.label_15.setGeometry(QtCore.QRect(190, 10, 251, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_15.setFont(font)
        self.label_15.setStyleSheet("color: rgb(170, 85, 127);")
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(self.frame_2)
        self.label_16.setGeometry(QtCore.QRect(680, 20, 101, 21))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_16.setFont(font)
        self.label_16.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_16.setObjectName("label_16")
        self.label_18 = QtWidgets.QLabel(self.frame_2)
        self.label_18.setGeometry(QtCore.QRect(830, 20, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_18.setFont(font)
        self.label_18.setStyleSheet("color: rgb(170, 85, 127);")
        self.label_18.setObjectName("label_18")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.frame_2)
        
        
        
        self.lineEdit_6.setGeometry(QtCore.QRect(830, 60, 391, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_6.setFont(font)
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.label_17 = QtWidgets.QLabel(self.frame_2)
        self.label_17.setGeometry(QtCore.QRect(680, 60, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_17.setFont(font)
        self.label_17.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_17.setObjectName("label_17")
        self.label_19 = QtWidgets.QLabel(self.frame_2)
        self.label_19.setGeometry(QtCore.QRect(680, 110, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_19.setFont(font)
        self.label_19.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_19.setObjectName("label_19")
        self.lineEdit_7 = QtWidgets.QLineEdit(self.frame_2)
        
        reg_ex = QRegExp("(\\d+\\.\\d+)")
        input_validator = QRegExpValidator(reg_ex, self.lineEdit_7)
        self.lineEdit_7.setValidator(input_validator)
        
        self.lineEdit_7.setGeometry(QtCore.QRect(830, 110, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_7.setFont(font)
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.label_20 = QtWidgets.QLabel(self.frame_2)
        self.label_20.setGeometry(QtCore.QRect(950, 110, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.label_20.setFont(font)
        self.label_20.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_20.setObjectName("label_20")
        self.label_21 = QtWidgets.QLabel(self.frame_2)
        self.label_21.setGeometry(QtCore.QRect(680, 160, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_21.setFont(font)
        self.label_21.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_21.setObjectName("label_21")
        self.lineEdit_8 = QtWidgets.QLineEdit(self.frame_2)
        
        reg_ex = QRegExp("(\\d+\\.\\d+)")
        input_validator = QRegExpValidator(reg_ex, self.lineEdit_8)
        self.lineEdit_8.setValidator(input_validator)
        
        self.lineEdit_8.setGeometry(QtCore.QRect(830, 160, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_8.setFont(font)
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.label_22 = QtWidgets.QLabel(self.frame_2)
        self.label_22.setGeometry(QtCore.QRect(950, 160, 51, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.label_22.setFont(font)
        self.label_22.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_22.setObjectName("label_22")
        self.label_23 = QtWidgets.QLabel(self.frame_2)
        self.label_23.setGeometry(QtCore.QRect(1060, 20, 51, 21))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_23.setFont(font)
        self.label_23.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_23.setObjectName("label_23")
        self.lineEdit_9 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_9.setGeometry(QtCore.QRect(1120, 20, 101, 21))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.lineEdit_9.setFont(font)
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.label_24 = QtWidgets.QLabel(self.frame_2)
        self.label_24.setGeometry(QtCore.QRect(1030, 160, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_24.setFont(font)
        self.label_24.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_24.setObjectName("label_24")
        self.lineEdit_10 = QtWidgets.QLineEdit(self.frame_2)
        
        reg_ex = QRegExp("(\\d+\\.\\d+)")
        input_validator = QRegExpValidator(reg_ex, self.lineEdit_10)
        self.lineEdit_10.setValidator(input_validator)
        
        self.lineEdit_10.setGeometry(QtCore.QRect(1140, 160, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_10.setFont(font)
        self.lineEdit_10.setObjectName("lineEdit_10")
        self.label_25 = QtWidgets.QLabel(self.frame_2)
        self.label_25.setGeometry(QtCore.QRect(1220, 160, 31, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.label_25.setFont(font)
        self.label_25.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_25.setObjectName("label_25")
        self.line_2 = QtWidgets.QFrame(self.frame_2)
        self.line_2.setGeometry(QtCore.QRect(670, 210, 591, 16))
        self.line_2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_2.setLineWidth(3)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setObjectName("line_2")
        self.pushButton_5 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_5.setGeometry(QtCore.QRect(670, 240, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_6.setGeometry(QtCore.QRect(780, 240, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_6.setFont(font)
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_7 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_7.setGeometry(QtCore.QRect(880, 240, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_7.setFont(font)
        self.pushButton_7.setObjectName("pushButton_7")
        self.pushButton_8 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_8.setGeometry(QtCore.QRect(990, 240, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_8.setFont(font)
        self.pushButton_8.setObjectName("pushButton_8")
        self.label_26 = QtWidgets.QLabel(self.frame_2)
        self.label_26.setGeometry(QtCore.QRect(30, 250, 461, 21))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_26.setFont(font)
        self.label_26.setStyleSheet("color: rgb(170, 85, 127);")
        self.label_26.setObjectName("label_26")
        self.label_28 = QtWidgets.QLabel(self.frame_2)
        self.label_28.setGeometry(QtCore.QRect(1030, 110, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_28.setFont(font)
        self.label_28.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_28.setObjectName("label_28")
        self.lineEdit_12 = QtWidgets.QLineEdit(self.frame_2)
        
        reg_ex = QRegExp("(\\d+\\.\\d+)")
        input_validator = QRegExpValidator(reg_ex, self.lineEdit_12)
        self.lineEdit_12.setValidator(input_validator)
        
        self.lineEdit_12.setGeometry(QtCore.QRect(1140, 110, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_12.setFont(font)
        self.lineEdit_12.setObjectName("lineEdit_12")
        self.label_29 = QtWidgets.QLabel(self.frame_2)
        self.label_29.setGeometry(QtCore.QRect(1220, 110, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.label_29.setFont(font)
        self.label_29.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_29.setObjectName("label_29")
        self.label_12 = QtWidgets.QLabel(self.frame)
        self.label_12.setGeometry(QtCore.QRect(830, 80, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_12.setFont(font)
        self.label_12.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(self.frame)
        self.label_13.setGeometry(QtCore.QRect(1010, 80, 51, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_13.setFont(font)
        self.label_13.setStyleSheet("color: rgb(170, 85, 127);")
        self.label_13.setObjectName("label_13")
        self.pushButton_9 = QtWidgets.QPushButton(self.frame)
        self.pushButton_9.setGeometry(QtCore.QRect(630, 320, 111, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_9.setFont(font)
        self.pushButton_9.setObjectName("pushButton_9")
        self.label_27 = QtWidgets.QLabel(self.frame)
        self.label_27.setGeometry(QtCore.QRect(1080, 80, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_27.setFont(font)
        self.label_27.setStyleSheet("color: rgb(0, 85, 127);")
        self.label_27.setObjectName("label_27")
        self.lineEdit_11 = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_11.setGeometry(QtCore.QRect(1170, 80, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_11.setFont(font)
        self.lineEdit_11.setObjectName("lineEdit_11")
        self.pushButton_10 = QtWidgets.QPushButton(self.frame)
        self.pushButton_10.setGeometry(QtCore.QRect(1180, 330, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_10.setFont(font)
        self.pushButton_10.setObjectName("pushButton_10")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1367, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        
        self.go_ahead="No"
        self.operation_flg="ADD"
        self.method_id=""

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Method Name :"))
        self.pushButton.setText(_translate("MainWindow", "Add"))
        self.pushButton_2.setText(_translate("MainWindow", "Reset"))
        self.label_3.setText(_translate("MainWindow", "Successfully  Saved."))
        self.label_3.hide()
        self.label_4.setText(_translate("MainWindow", "Methods Information"))
        self.label_5.setText(_translate("MainWindow", "19-09-2022 11:32:11"))
        self.label_2.setText(_translate("MainWindow", "Max. Torque :"))
        self.label_6.setText(_translate("MainWindow", "Max. Temparature :"))
        self.label_7.setText(_translate("MainWindow", "( N )"))
        self.label_8.setText(_translate("MainWindow", "( .C )"))
        self.label_9.setText(_translate("MainWindow", "Max. Time :"))
        self.label_10.setText(_translate("MainWindow", "( Min )"))
        self.label_11.setText(_translate("MainWindow", "Arc:"))
        self.pushButton_3.setText(_translate("MainWindow", "Save"))
        self.pushButton_4.setText(_translate("MainWindow", "Delete"))
        self.tableWidget.setSortingEnabled(True)
        item = self.tableWidget.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "ID"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Spec.No"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Method Name"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Max. Torque"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Max. Temparature"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Max. Time"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Arc"))
        __sortingEnabled = self.tableWidget.isSortingEnabled()
        self.tableWidget.setSortingEnabled(False)
        item = self.tableWidget.item(0, 0)
        item.setText(_translate("MainWindow", "1"))
        item = self.tableWidget.item(0, 1)
        item.setText(_translate("MainWindow", "1.5"))
        item = self.tableWidget.item(0, 2)
        item.setText(_translate("MainWindow", "2"))
        item = self.tableWidget.item(0, 3)
        item.setText(_translate("MainWindow", "3"))
        item = self.tableWidget.item(0, 4)
        item.setText(_translate("MainWindow", "4"))
        item = self.tableWidget.item(0, 5)
        item.setText(_translate("MainWindow", "5"))
        item = self.tableWidget.item(0, 6)
        item.setText(_translate("MainWindow", "6"))
        self.tableWidget.setSortingEnabled(__sortingEnabled)
        self.tableWidget_2.setSortingEnabled(True)
        item = self.tableWidget_2.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "1"))
        item = self.tableWidget_2.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Limit. ID"))
        item = self.tableWidget_2.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Parameter Name"))
        item = self.tableWidget_2.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "U-Limit"))
        item = self.tableWidget_2.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "L-Limit"))
        item = self.tableWidget_2.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Target"))
        item = self.tableWidget_2.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Unit"))
        item = self.tableWidget_2.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Tolarance"))
        __sortingEnabled = self.tableWidget_2.isSortingEnabled()
        self.tableWidget_2.setSortingEnabled(False)
        item = self.tableWidget_2.item(0, 0)
        item.setText(_translate("MainWindow", "1"))
        item = self.tableWidget_2.item(0, 1)
        item.setText(_translate("MainWindow", "2"))
        item = self.tableWidget_2.item(0, 2)
        item.setText(_translate("MainWindow", "3"))
        item = self.tableWidget_2.item(0, 3)
        item.setText(_translate("MainWindow", "4"))
        item = self.tableWidget_2.item(0, 4)
        item.setText(_translate("MainWindow", "56"))
        item = self.tableWidget_2.item(0, 5)
        item.setText(_translate("MainWindow", "5"))
        item = self.tableWidget_2.item(0, 6)
        item.setText(_translate("MainWindow", "6"))
        self.tableWidget_2.setSortingEnabled(__sortingEnabled)
        self.label_14.setText(_translate("MainWindow", "Limits For Method ID :"))
        self.label_15.setText(_translate("MainWindow", "001 (Method Name)"))
        self.label_16.setText(_translate("MainWindow", "Limit ID :"))
        self.label_18.setText(_translate("MainWindow", "001"))
        self.label_17.setText(_translate("MainWindow", "Param. Name :"))
        self.label_19.setText(_translate("MainWindow", "U-Limit :"))
        self.label_20.setText(_translate("MainWindow", "(Unit)"))
        self.label_21.setText(_translate("MainWindow", "L-Limit :"))
        self.label_22.setText(_translate("MainWindow", "(Unit)"))
        self.label_23.setText(_translate("MainWindow", "Unit:"))
        self.label_24.setText(_translate("MainWindow", "Tolarance:"))
        self.label_25.setText(_translate("MainWindow", "( %)"))
        self.pushButton_5.setText(_translate("MainWindow", "Add"))
        self.pushButton_6.setText(_translate("MainWindow", "Save"))
        self.pushButton_7.setText(_translate("MainWindow", "Delete"))
        self.pushButton_8.setText(_translate("MainWindow", "Reset"))
        self.label_26.setText(_translate("MainWindow", "Saved Successfully."))
        self.label_26.hide()
        self.label_28.setText(_translate("MainWindow", "Target :"))
        self.label_29.setText(_translate("MainWindow", "(Unit)"))
        self.label_12.setText(_translate("MainWindow", "Method ID :"))
        self.label_13.setText(_translate("MainWindow", "001"))
        self.pushButton_9.setText(_translate("MainWindow", "Return"))
        self.label_27.setText(_translate("MainWindow", "Spec.No :"))
        self.pushButton_10.setText(_translate("MainWindow", "Set Limits"))
        self.pushButton_9.clicked.connect(MainWindow.close)
        self.frame_2.hide()
        self.pushButton_10.clicked.connect(self.limits_load)
        self.pushButton.clicked.connect(self.c_add_click)
        self.pushButton_2.clicked.connect(self.reset_all)
        self.pushButton_3.clicked.connect(self.c_edit_click)
        self.pushButton_4.clicked.connect(self.c_delete_click)
        
        self.pushButton_5.clicked.connect(self.L_add_click)        
        self.pushButton_6.clicked.connect(self.L_edit_click)
        self.pushButton_7.clicked.connect(self.L_delete_click)
        self.pushButton_8.clicked.connect(self.reset_limits)
        
        self.tableWidget.doubleClicked.connect(self.c_fetch_data_from_tw)
        self.tableWidget_2.doubleClicked.connect(self.L_fetch_data_from_tw)
        
        self.timer1=QtCore.QTimer()
        self.timer1.setInterval(1000)        
        self.timer1.timeout.connect(self.device_date)
        self.timer1.start(1)
        self.show_grid_methods()
        self.reset_all()
        
    
    def reset_all(self):        
        
        self.pushButton.setEnabled(True) ##--Add
        self.pushButton_3.setDisabled(True)## --save
        self.pushButton_4.setDisabled(True)##--delete
        self.pushButton_2.setEnabled(True) ##--Reset
        self.pushButton_10.setDisabled(True)## --set Limit
        
        self.lineEdit.setText("")
        self.lineEdit_2.setText("")
        self.lineEdit_3.setText("")
        self.lineEdit_4.setText("")
        self.lineEdit_5.setText("")
        self.lineEdit_11.setText("")
        self.label_3.setText("")  
        self.frame_2.hide()
        
        connection = sqlite3.connect("mdr.db")
        results=connection.execute("select seq+1 from sqlite_sequence WHERE name = 'METHODS_MST'")       
        for x in results:           
                 self.label_13.setText(str(x[0]).zfill(3))            
        connection.close()  
    
    def c_load_data(self):        
        if(self.operation_flg=="ADD"):
                #print("inside Add ")
                self.c_add_data()
        elif(self.operation_flg=="EDIT"):
                #print("inside edit ")
                self.c_edit_data()
        elif(self.operation_flg=="DELETE"):
                #print("inside delete ")
                self.c_delete_data()
        else:
                print("Invalid Operation.")
         
    
    def c_add_click(self):
        self.operation_flg="ADD"       
        self.c_load_data()
        
    def c_add_data(self):
        self.validations()
        if(self.label_13.text() != ""):            
            if(self.go_ahead=="Yes"):
                connection = sqlite3.connect("mdr.db")
                with connection:        
                        cursor = connection.cursor()
                        cursor.execute("INSERT INTO METHODS_MST(METHOD_NAME,SET_TORQUE,SET_TEMP,SET_TEST_TIME,ARC,SPEC_NUM) VALUES('"+self.lineEdit.text()+"','"+self.lineEdit_2.text()+"','"+self.lineEdit_3.text()+"','"+self.lineEdit_4.text()+"','"+self.lineEdit_5.text()+"','"+self.lineEdit_11.text()+"')")                    
                connection.commit();                    
                connection.close();  
          
                self.label_3.setText("Record Added Successfully.")           
                self.label_3.show()
                self.show_grid_methods()
        else :
            self.label_3.setText("Id is Empty.")
            self.label_3.show()            
        
    def c_edit_click(self):        
        row = self.tableWidget.currentRow()     
        if(row != -1 ):
            self.operation_flg="EDIT"
            self.c_load_data()
        else:    
            self.label_3.setText("Please Select the record.")
            self.label_3.show() 
    
    def c_edit_data(self):
        self.validations()
        if(self.go_ahead == 'Yes'):
            connection = sqlite3.connect("mdr.db")
            with connection:        
                    cursor = connection.cursor()
                    cursor.execute("UPDATE METHODS_MST SET METHOD_NAME='"+str(self.lineEdit.text())+"',SET_TORQUE='"+self.lineEdit_2.text()+"',SET_TEMP='"+self.lineEdit_3.text()+"', SET_TEST_TIME='"+self.lineEdit_4.text()+"',ARC='"+self.lineEdit_4.text()+"',SPEC_NUM ='"+self.lineEdit_11.text()+"'   WHERE  METHOD_ID ='"+str(self.method_id)+"'")                    
            connection.commit();                    
            connection.close()
            self.label_3.setText("Record Saved Successfully.")       
            self.label_3.show()
            self.show_grid_methods()
    
    def c_delete_click(self):
        row = self.tableWidget.currentRow()     
        if(row != -1 ):
            self.operation_flg="DELETE"
            self.c_load_data()
        else:    
            self.label_3.setText("Please Select the record.")
            self.label_3.show()        
     
      
    def c_delete_data(self):
        if(self.label_13.text() != ""):
            close = QMessageBox()
            close.setText("Confirm Deleteing Method ID : "+str(self.method_id))
            close.setStandardButtons(QMessageBox.Yes | QMessageBox.Cancel)
            close = close.exec()
            if close == QMessageBox.Yes:
                    connection = sqlite3.connect("mdr.db")
                    with connection:        
                            cursor = connection.cursor()
                            cursor.execute("DELETE FROM METHODS_MST WHERE METHOD_ID ='"+str(self.method_id)+"'")                    
                    connection.commit();                    
                    connection.close()
                    
                    self.label_3.setText("Record Deleted Successfully.")                   
                    self.label_3.show()                    
                    self.show_grid_methods()
            else:
                    self.label_3.setText("Canceled Delete..")                   
                    self.label_3.show()
            
    
    
    
    def validations(self):        
        self.go_ahead="No"
        if(self.lineEdit.text() == ""):
             self.label_3.setText("Method Name is Empty.")
             self.label_3.show()  
        elif(self.lineEdit_2.text()== ""):
             self.label_3.setText("Max. Torque is Empty.")
             self.label_3.show()
        elif(self.lineEdit_3.text()== ""):
             self.label_3.setText("Max. Temparature is Empty.")
             self.label_3.show()
        elif(self.lineEdit_4.text() == ""):
             self.label_3.setText("Max. Time is Empty.")
             self.label_3.show()     
        elif(self.lineEdit_5.text()== ""):
             self.label_3.setText("Arc is Empty.")
             self.label_3.show()
        elif(self.lineEdit_11.text()== ""):
             self.label_3.setText("Spec. No is Empty.")
             self.label_3.show()
        else:
             self.go_ahead="Yes"
    
    
    def c_fetch_data_from_tw(self):        
        row = self.tableWidget.currentRow()     
        if(row != -1 ):
            self.method_id=str(self.tableWidget.item(row, 0).text())
            self.label_13.setText(str(self.tableWidget.item(row, 0).text()).zfill(3)) 
            self.lineEdit.setText(str(self.tableWidget.item(row, 1).text())) #Method Name
            self.method_name=str(self.tableWidget.item(row, 1).text())
            self.lineEdit_11.setText(str(self.tableWidget.item(row, 2).text())) #Spec.Num
            self.lineEdit_2.setText(str(self.tableWidget.item(row, 3).text())) #Max. Torq
            self.lineEdit_3.setText(str(self.tableWidget.item(row, 4).text())) #Max. Temp
            self.lineEdit_4.setText(str(self.tableWidget.item(row, 5).text())) #Time
            self.lineEdit_5.setText(str(self.tableWidget.item(row, 6).text())) # Arc            
           
            
            self.pushButton.setDisabled(True) ##--Add
            self.pushButton_3.setEnabled(True)## --save
            self.pushButton_4.setEnabled(True)##--delete
            self.pushButton_2.setEnabled(True) ##--Reset
            self.pushButton_10.setEnabled(True)## --set Limit
            self.limits_load()
            
        else:    
            self.label_3.setText("Please Select the record.")
            self.label_3.show()
    
    
    
    ###############################
    
    def reset_limits(self):        
        
        self.pushButton_5.setEnabled(True) ##--Add
        self.pushButton_6.setDisabled(True)## --save
        self.pushButton_7.setDisabled(True)##--delete
        self.pushButton_8.setEnabled(True) ##--Reset
        
        
        self.lineEdit_6.setText("")
        self.lineEdit_7.setText("")
        self.lineEdit_8.setText("")
        self.lineEdit_9.setText("")
        self.lineEdit_10.setText("")
        self.lineEdit_12.setText("")
        self.label_26.setText("")
        self.label_20.setText("")
        self.label_22.setText("")
        self.label_29.setText("") 
        
        
        connection = sqlite3.connect("mdr.db")
        results=connection.execute("select seq+1 from sqlite_sequence WHERE name = 'LIMITS_MST'")       
        for x in results:           
                 self.label_18.setText(str(x[0]).zfill(3))            
        connection.close()  
    
    
    def L_load_data(self):        
        if(self.L_operation_flg=="ADD"):
                #print("inside Add ")
                self.L_add_data()
        elif(self.L_operation_flg=="EDIT"):
                #print("inside edit ")
                self.L_edit_data()
        elif(self.L_operation_flg=="DELETE"):
                #print("inside delete ")
                self.L_delete_data()
        else:
                print("Invalid Operation.")
         
    
    def L_add_click(self):
        self.L_operation_flg="ADD"       
        self.L_load_data()
        
    def L_add_data(self):
        self.L_validations()
        if(self.label_18.text() != ""):            
            if(self.go_ahead=="Yes"):
                connection = sqlite3.connect("mdr.db")
                with connection:        
                        cursor = connection.cursor()
                        cursor.execute("INSERT INTO LIMITS_MST(PARAM,U_VAL,L_VAL,UNIT,TARGET_VAL,TOL_PER,METHOD_ID) VALUES('"+self.lineEdit_6.text()+"','"+self.lineEdit_7.text()+"','"+self.lineEdit_8.text()+"','"+self.lineEdit_9.text()+"','"+self.lineEdit_10.text()+"','"+self.lineEdit_12.text()+"','"+str(int(self.method_id))+"')")                    
                connection.commit();                    
                connection.close();  
          
                self.label_26.setText("Record Added Successfully.")           
                self.label_26.show()
                self.show_grid_limits()
        else :
            self.label_26.setText("Id is Empty.")
            self.label_26.show()            
        
    def L_edit_click(self):        
        row = self.tableWidget.currentRow()     
        if(row != -1 ):
            self.L_operation_flg="EDIT"
            self.L_load_data()
        else:    
            self.label_26.setText("Please Select the record.")
            self.label_26.show() 
    
    def L_edit_data(self):
        self.L_validations()
        if(self.go_ahead == 'Yes'):
            connection = sqlite3.connect("mdr.db")
            with connection:        
                    cursor = connection.cursor()
                    cursor.execute("UPDATE LIMITS_MST SET PARAM='"+str(self.lineEdit_6.text())+"',U_VAL='"+self.lineEdit_7.text()+"',L_VAL='"+self.lineEdit_8.text()+"', UNIT='"+self.lineEdit_9.text()+"',TARGET_VAL='"+self.lineEdit_12.text()+"',TOL_PER ='"+self.lineEdit_10.text()+"'   WHERE  LIMIT_ID ='"+str(self.limit_id)+"'")                    
            connection.commit();                    
            connection.close()
            self.label_26.setText("Record Saved Successfully.")       
            self.label_26.show()
            self.show_grid_limits()
    
    def L_delete_click(self):
        row = self.tableWidget.currentRow()     
        if(row != -1 ):
            self.L_operation_flg="DELETE"
            self.L_load_data()
        else:    
            self.label_26.setText("Please Select the record.")
            self.label_26.show()        
     
      
    def L_delete_data(self):
        if(self.label_18.text() != ""):
            close = QMessageBox()
            close.setText("Confirm Deleteing Limit ID : "+str(self.limit_id))
            close.setStandardButtons(QMessageBox.Yes | QMessageBox.Cancel)
            close = close.exec()
            if close == QMessageBox.Yes:
                    connection = sqlite3.connect("mdr.db")
                    with connection:        
                            cursor = connection.cursor()
                            cursor.execute("DELETE FROM LIMITS_MST WHERE LIMIT_ID ='"+str(self.limit_id)+"'")                    
                    connection.commit();                    
                    connection.close()
                    
                    self.label_26.setText("Record Deleted Successfully.")                   
                    self.label_26.show()                    
                    self.show_grid_limits()
            else:
                    self.label_26.setText("Canceled Delete..")                   
                    self.label_26.show()
            
    
    
    
    def L_validations(self):        
        self.go_ahead="No"
        if(self.lineEdit_6.text() == ""):
             self.label_26.setText("Pamaeter is Empty.")
             self.label_26.show()  
        elif(self.lineEdit_7.text()== ""):
             self.label_26.setText("U-Limit is Empty.")
             self.label_3.show()
        elif(self.lineEdit_8.text()== ""):
             self.label_26.setText("L-Limit is Empty.")
             self.label_26.show()
        elif(self.lineEdit_9.text() == ""):
             self.label_26.setText("Unit is Empty.")
             self.label_26.show()     
        elif(self.lineEdit_10.text()== ""):
             self.label_26.setText("Target is Empty.")
             self.label_26.show()
        elif(self.lineEdit_12.text()== ""):
             self.label_26.setText("Tolarance is Empty.")
             self.label_26.show()
        else:
             self.go_ahead="Yes"
    
    
    def L_fetch_data_from_tw(self):        
        row = self.tableWidget_2.currentRow()     
        if(row != -1 ):
            self.limit_id=str(self.tableWidget_2.item(row, 0).text())
            self.label_18.setText(str(self.tableWidget_2.item(row, 0).text()).zfill(3)) 
            self.lineEdit_6.setText(str(self.tableWidget_2.item(row, 1).text()))           
            self.lineEdit_7.setText(str(self.tableWidget_2.item(row, 2).text())) 
            self.lineEdit_8.setText(str(self.tableWidget_2.item(row, 3).text())) 
            self.lineEdit_9.setText(str(self.tableWidget_2.item(row, 5).text())) 
            self.lineEdit_10.setText(str(self.tableWidget_2.item(row, 6).text())) 
            self.lineEdit_12.setText(str(self.tableWidget_2.item(row, 4).text()))
            
            self.label_20.setText(str(self.tableWidget_2.item(row, 5).text()))
            self.label_22.setText(str(self.tableWidget_2.item(row, 5).text()))
            self.label_29.setText(str(self.tableWidget_2.item(row, 5).text())) 
           
            
            self.pushButton_5.setDisabled(True) ##--Add
            self.pushButton_6.setEnabled(True)## --save
            self.pushButton_7.setEnabled(True)##--delete
            self.pushButton_8.setEnabled(True) ##--Reset
            
            #self.limits_load()
            
        else:    
            self.label_26.setText("Please Select the record.")
            self.label_26.show()
    
    #####################################################
            
    def device_date(self):     
        self.label_5.setText(datetime.datetime.now().strftime("%d %b %Y %H:%M:%S"))
     
    
    def limits_load(self):
        self.frame_2.show()
        self.label_15.setText(str(self.method_id)+"  ("+str(self.method_name)+")")
        if(str(self.method_id) != ""):
            self.show_grid_limits()
            self.reset_limits()
        
    
    def show_grid_methods(self):        
        #print("inside tear list.....")
        self.delete_all_records()
        font = QtGui.QFont()
        font.setPointSize(10)
        self.tableWidget.setFont(font)
        self.tableWidget.setColumnCount(7)
        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.tableWidget.setHorizontalHeaderLabels(['Method Id','Method Name','Spec.No.','Max.Torque','Max.Temparature','Test Time','Arc'])  
              
        self.tableWidget.setColumnWidth(0, 170)
        self.tableWidget.setColumnWidth(1, 120)
        self.tableWidget.setColumnWidth(2, 150)
        self.tableWidget.setColumnWidth(3, 150)
        self.tableWidget.setColumnWidth(4, 150)
        self.tableWidget.setColumnWidth(5, 150)
        self.tableWidget.setColumnWidth(6, 170)
        
        connection = sqlite3.connect("mdr.db")
         
        results=connection.execute("SELECT METHOD_ID,METHOD_NAME,SPEC_NUM,printf(\"%.2f\", SET_TORQUE),printf(\"%.2f\", SET_TEMP),printf(\"%d\", SET_TEST_TIME),printf(\"%.2f\", ARC) FROM METHODS_MST")
        for row_number, row_data in enumerate(results):            
            self.tableWidget.insertRow(row_number)
            for column_number, data in enumerate(row_data):
                self.tableWidget.setItem(row_number,column_number,QTableWidgetItem(str(data)))                
        self.tableWidget.resizeColumnsToContents()
        #self.tableWidget.resizeRowsToContents()
        self.tableWidget.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers)
        connection.close()
    
    def show_grid_limits(self):        
        #print("inside tear list.....")
        self.delete_all_records2()
        font = QtGui.QFont()
        font = QtGui.QFont()
        font.setPointSize(10)        
        self.tableWidget_2.setFont(font)
        self.tableWidget_2.setColumnCount(7)
        self.tableWidget_2.horizontalHeader().setStretchLastSection(True)
        self.tableWidget_2.setHorizontalHeaderLabels(['Limit.ID','Parameter Name','U-Limit','L-Limit','Target','Unit','Tolarance'])  
              
        self.tableWidget_2.setColumnWidth(0, 170)
        self.tableWidget_2.setColumnWidth(1, 120)
        self.tableWidget_2.setColumnWidth(2, 120)
        self.tableWidget_2.setColumnWidth(3, 170)
        self.tableWidget_2.setColumnWidth(4, 120)
        self.tableWidget_2.setColumnWidth(5, 150)
        self.tableWidget_2.setColumnWidth(6, 150)
        
        connection = sqlite3.connect("mdr.db")         
        results=connection.execute("SELECT LIMIT_ID,PARAM,printf(\"%.2f\", U_VAL),printf(\"%.2f\", L_VAL) ,printf(\"%.2f\", TARGET_VAL),UNIT,printf(\"%.2f\", TOL_PER)   FROM LIMITS_MST where METHOD_ID = '"+str(int(self.method_id))+"'")
        for row_number, row_data in enumerate(results):            
            self.tableWidget_2.insertRow(row_number)
            for column_number, data in enumerate(row_data):
                self.tableWidget_2.setItem(row_number,column_number,QTableWidgetItem(str(data)))                
        self.tableWidget_2.resizeColumnsToContents()
        #self.tableWidget_2.resizeRowsToContents()
        self.tableWidget_2.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers)
        connection.close()
    
     
    def delete_all_records(self):
        i = self.tableWidget.rowCount()       
        while (i>0):             
            i=i-1
            self.tableWidget.removeRow(i)
    
    def delete_all_records2(self):
        i = self.tableWidget_2.rowCount()       
        while (i>0):             
            i=i-1
            self.tableWidget_2.removeRow(i)
    


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = mdr_04_Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
