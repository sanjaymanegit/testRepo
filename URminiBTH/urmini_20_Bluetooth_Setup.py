# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '20_Bluetooth_Setup.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from urmini_19_loadcelll_status import urmini_19_Ui_MainWindow
import datetime
import time
from PyQt5.QtCore import QDate
import sys,os
import sqlite3
import serial
import bluetooth

class urmini_20_Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(645, 489)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(30, 20, 581, 411))
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.frame.setFont(font)
        self.frame.setAutoFillBackground(False)
        self.frame.setStyleSheet("background-color: rgb(170, 255, 255);\n"
"")
        self.frame.setFrameShape(QtWidgets.QFrame.Box)
        self.frame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame.setLineWidth(3)
        self.frame.setObjectName("frame")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(440, 20, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.frame)
        self.label_2.setGeometry(QtCore.QRect(30, 40, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: rgb(170, 0, 127);")
        self.label_2.setObjectName("label_2")
        self.pushButton_6 = QtWidgets.QPushButton(self.frame)
        self.pushButton_6.setGeometry(QtCore.QRect(260, 90, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_6.setFont(font)
        self.pushButton_6.setStyleSheet("background-color: rgb(170, 170, 127);\n"
"")
        self.pushButton_6.setAutoDefault(True)
        self.pushButton_6.setDefault(True)
        self.pushButton_6.setFlat(False)
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_7 = QtWidgets.QPushButton(self.frame)
        self.pushButton_7.setGeometry(QtCore.QRect(370, 90, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_7.setFont(font)
        self.pushButton_7.setStyleSheet("background-color: rgb(170, 170, 127);\n"
"")
        self.pushButton_7.setAutoDefault(True)
        self.pushButton_7.setDefault(True)
        self.pushButton_7.setFlat(False)
        self.pushButton_7.setObjectName("pushButton_7")
        self.label_3 = QtWidgets.QLabel(self.frame)
        self.label_3.setGeometry(QtCore.QRect(20, 90, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.lineEdit = QtWidgets.QLineEdit(self.frame)
        self.lineEdit.setGeometry(QtCore.QRect(110, 90, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit.setText("")
        self.lineEdit.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit.setObjectName("lineEdit")
        self.line = QtWidgets.QFrame(self.frame)
        self.line.setGeometry(QtCore.QRect(20, 140, 531, 21))
        self.line.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line.setLineWidth(2)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setObjectName("line")
        self.pushButton_8 = QtWidgets.QPushButton(self.frame)
        self.pushButton_8.setGeometry(QtCore.QRect(460, 90, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_8.setFont(font)
        self.pushButton_8.setStyleSheet("background-color: rgb(170, 170, 127);\n"
"")
        self.pushButton_8.setAutoDefault(True)
        self.pushButton_8.setDefault(True)
        self.pushButton_8.setFlat(False)
        self.pushButton_8.setObjectName("pushButton_8")
        self.label_4 = QtWidgets.QLabel(self.frame)
        self.label_4.setGeometry(QtCore.QRect(200, 30, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("color: rgb(170, 0, 127);")
        self.label_4.setObjectName("label_4")
        self.frame_2 = QtWidgets.QFrame(self.frame)
        self.frame_2.setGeometry(QtCore.QRect(20, 220, 531, 171))
        self.frame_2.setStyleSheet("background-color: rgb(240, 255, 228);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_2.setLineWidth(2)
        self.frame_2.setObjectName("frame_2")
        self.pushButton_12 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_12.setGeometry(QtCore.QRect(250, 20, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_12.setFont(font)
        self.pushButton_12.setStyleSheet("background-color: rgb(255, 170, 127);\n")
        self.pushButton_12.setAutoDefault(True)
        self.pushButton_12.setDefault(True)
        self.pushButton_12.setFlat(False)
        self.pushButton_12.setObjectName("pushButton_12")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_2.setGeometry(QtCore.QRect(100, 20, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_2.setText("")        
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_5 = QtWidgets.QLabel(self.frame_2)
        self.label_5.setGeometry(QtCore.QRect(10, 20, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.frame_2)
        self.label_6.setGeometry(QtCore.QRect(370, 20, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("color: rgb(0, 102, 51);")
        self.label_6.setObjectName("label_6")
        
        self.pushButton_13 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_13.setGeometry(QtCore.QRect(10, 70, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_13.setFont(font)
        self.pushButton_13.setStyleSheet("background-color: rgb(255, 170, 127);\n")
        self.pushButton_13.setAutoDefault(True)
        self.pushButton_13.setDefault(True)
        self.pushButton_13.setFlat(False)
        self.pushButton_13.setObjectName("pushButton_13")
        
        
        
        self.pushButton_13_1 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_13_1.setGeometry(QtCore.QRect(10, 110, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_13_1.setFont(font)
        self.pushButton_13_1.setStyleSheet("background-color: rgb(255, 170, 127);\n")
        self.pushButton_13_1.setAutoDefault(True)
        self.pushButton_13_1.setDefault(True)
        self.pushButton_13_1.setFlat(False)
        self.pushButton_13_1.setObjectName("pushButton_13_1")
        
        
        self.label_6_1 = QtWidgets.QLabel(self.frame_2)
        self.label_6_1.setGeometry(QtCore.QRect(20, 144, 111, 21))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        self.label_6_1.setFont(font)        
        self.label_6_1.setStyleSheet("color: rgb(170, 0, 127);")
        self.label_6_1.setObjectName("label_6_1")
        
        self.listWidget = QtWidgets.QListWidget(self.frame_2)
        self.listWidget.setGeometry(QtCore.QRect(150, 70, 361, 71))
        self.listWidget.setFrameShape(QtWidgets.QFrame.Box)
        self.listWidget.setFrameShadow(QtWidgets.QFrame.Plain)
        self.listWidget.setLineWidth(2)
        self.listWidget.setObjectName("listWidget")
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        self.radioButton = QtWidgets.QRadioButton(self.frame)
        self.radioButton.setGeometry(QtCore.QRect(30, 170, 82, 31))
        self.radioButton.setChecked(True)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.radioButton.setFont(font)
        self.radioButton.setObjectName("radioButton")
        
        self.radioButton_2 = QtWidgets.QRadioButton(self.frame)
        self.radioButton_2.setGeometry(QtCore.QRect(150, 170, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setObjectName("radioButton_2")
        
        self.pushButton_14 = QtWidgets.QPushButton(self.frame)
        self.pushButton_14.setGeometry(QtCore.QRect(390, 170, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_14.setFont(font)
        self.pushButton_14.setStyleSheet("background-color: rgb(255, 170, 127);\n"
"")
        self.pushButton_14.setAutoDefault(True)
        self.pushButton_14.setDefault(True)
        self.pushButton_14.setFlat(False)
        self.pushButton_14.setObjectName("pushButton_14")
        self.pushButton_15 = QtWidgets.QPushButton(self.frame)
        self.pushButton_15.setGeometry(QtCore.QRect(270, 170, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_15.setFont(font)
        self.pushButton_15.setStyleSheet("background-color: rgb(255, 170, 127);\n"
"")
        self.pushButton_15.setAutoDefault(True)
        self.pushButton_15.setDefault(True)
        self.pushButton_15.setFlat(False)
        self.pushButton_15.setObjectName("pushButton_15")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 645, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.b_status="INACTIVE"
        self.mac_id=""

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "08 Feb 2021 11:44:00"))
        self.label_2.setText(_translate("MainWindow", "Password Incorrect."))
        
        self.pushButton_6.setText(_translate("MainWindow", "PROCCED"))
        self.pushButton_7.setText(_translate("MainWindow", "RESET"))
        self.label_3.setText(_translate("MainWindow", "Password :"))
        self.pushButton_8.setText(_translate("MainWindow", "RETURN"))
        self.label_4.setText(_translate("MainWindow", "BLUETOOTH SETUP"))
        self.pushButton_12.setText(_translate("MainWindow", "Connect"))
        self.label_5.setText(_translate("MainWindow", "MAC Address :"))
        self.label_6.setText(_translate("MainWindow", "MAC Registered Succesfully"))
        
        self.pushButton_13.setText(_translate("MainWindow", "Devices List"))
        self.pushButton_13.setDisabled(True)
        self.pushButton_13_1.setText(_translate("MainWindow", "Serial Data"))
        self.pushButton_13_1.setDisabled(True)
        self.label_6_1.setText("")
        
        __sortingEnabled = self.listWidget.isSortingEnabled()
        self.listWidget.setSortingEnabled(False)        
        self.listWidget.setSortingEnabled(__sortingEnabled)
        self.radioButton.setText(_translate("MainWindow", "INACTIVE"))
        self.radioButton_2.setText(_translate("MainWindow", "ACTIVE"))
        self.pushButton_14.setText(_translate("MainWindow", "Check Load Cell"))
        self.pushButton_15.setText(_translate("MainWindow", "SAVE"))
        self.pushButton_8.clicked.connect(MainWindow.close)
        self.pushButton_14.clicked.connect(self.open_new_window)
        self.radioButton_2.clicked.connect(self.active_show)
        self.radioButton.clicked.connect(self.inactive_hide)        
        self.pushButton_15.clicked.connect(self.save_data)
        self.pushButton_12.clicked.connect(self.register_mac)
        self.pushButton_13_1.clicked.connect(self.check_bth)        
        self.pushButton_13.clicked.connect(self.devices_list)
        self.listWidget.doubleClicked.connect(self.select_mac)
        
        
        self.timer1=QtCore.QTimer()
        self.timer1.setInterval(1000)        
        self.timer1.timeout.connect(self.device_date)
        self.timer1.start(1)
        self.login_hide()
        self.pushButton_6.clicked.connect(self.login_page)
        self.pushButton_7.clicked.connect(self.reset_fun)
        #self.load_BTH_data()

    def device_date(self):     
        self.label.setText(datetime.datetime.now().strftime("%d %b %Y %H:%M:%S"))
    
    def login_hide(self):
        self.radioButton.hide()
        self.radioButton_2.hide()
        self.pushButton_14.hide()
        self.pushButton_15.hide()
        self.label_2.hide()
        self.frame_2.hide()
        self.label_6.hide()
        
    def check_bth(self):
        self.listWidget.clear() 
        self.ser = serial.Serial(
                                        port='/dev/rfcomm0',
                                        baudrate=9600,
                                        #bytesize=serial.EIGHTBITS,
                                        #parity=serial.PARITY_NONE,
                                        #stopbits=serial.STOPBITS_ONE,
                                        #xonxoff=False,
                                        #timeout = 0.05
                                    )      
        #bluetoothSerial = serial.Serial( "/dev/rfcomm0", baudrate=9600 )
        
        #=======================
        self.command_str="T"
        print("Start Command : "+str(self.command_str))
        b = bytes(self.command_str, 'utf-8')
        self.ser.write(b)
           
        #========================
        self.command_str="S"
        print("Start Command : "+str(self.command_str))
        b = bytes(self.command_str, 'utf-8')
        self.ser.write(b)
        #======
        
        RXData = (self.ser.readline()).strip().decode("utf-8")
        print (RXData)
        line=str(RXData)
        item= QtWidgets.QListWidgetItem(str(line))
        #item.setBackground(QtGui.QColor("black"))
        self.listWidget.addItem(item)
        self.buff=line.split("_")
        if(len(self.buff)> 4):
                        if(str(self.buff[4]) == 'R' or str(self.buff[4]) == 'S'):
                                  if(int(self.buff[3]) < 100)  :
                                        self.label_6_1.setText("Battery: "+str(int(self.buff[3]))+" %")
                                  else:
                                        self.label_6_1.setText("Battery Charging..")
                            
        
    
                            
        
    def list_bth_data(self):
        if os.path.exists('/dev/rfcomm0') == False:
                path = 'sudo rfcomm bind 0 00:20:10:09:05:CD'
                os.system (path)
                time.sleep(1)
        else:
                f = open('/dev/rfcomm0','r')
                for line in f:
                         item= QtWidgets.QListWidgetItem(str(line))
                         item.setBackground(QtGui.QColor("black"))
                         self.listWidget.addItem(item)
                f.close()
    
    def devices_list(self):
        self.listWidget.clear()
        try:
            nearby_devices = bluetooth.discover_devices()
            for bdaddr in nearby_devices:
                    print("Devices:"+str(bdaddr))
                    item= QtWidgets.QListWidgetItem(str(bdaddr))
                    #item.setBackground(QtGui.QColor("black"))
                    self.listWidget.addItem(item)            
        except:
                self.label_6.setText("Bluetooth Off")
                self.label_6.show()
                print("Bluetooth Off")
                       
  
    def login_show(self):
        self.load_BTH_data()
        self.radioButton.show()
        self.radioButton_2.show()
        #self.pushButton_14.show()
        self.pushButton_15.show()
       
        
    def inactive_hide(self):
        self.frame_2.hide()
        self.pushButton_14.hide()
    
    def active_show(self):
        self.frame_2.show()
        self.pushButton_14.show()
        
          
    def load_BTH_data(self):
        connection = sqlite3.connect("ur.db")
        results=connection.execute("select BLUETOOTH_STATUS,MAC_ID_BTH from GLOBAL_VAR_TEST") 
        for x in results:
                  self.lineEdit_2.setText(str(x[1]))
                  self.mac_id=str(x[1])
                  if(str(x[0]) == 'INACTIVE'):
                          self.radioButton.setChecked(True)
                          self.radioButton_2.setChecked(False)
                          self.b_status="ACTIVE"
                          self.inactive_hide()
                  elif(str(x[0]) == 'ACTIVE'):
                          self.radioButton_2.setChecked(True)
                          self.radioButton.setChecked(False)
                          self.b_status="ACTIVE"
                          self.active_show()
                  else:
                          self.inactive_hide()
        connection.close()
        
        #select BLUETOOTH_STATUS,MAC_ID_BTH from GLOBAL_VAR_TEST;
    def open_new_window(self):       
        self.window = QtWidgets.QMainWindow()
        #self.window=myWindow()
        self.ui=urmini_19_Ui_MainWindow()
        self.ui.setupUi(self.window)           
        self.window.show()
    
    def login_page(self):
        connection = sqlite3.connect("services.db")
        results=connection.execute("SELECT PWD FROM SERVICES_MST WHERE SERVICE_NAME = 'SYSTEM' AND STATUS = 'ACTIVE'") 
        for x in results:  
            if(str(self.lineEdit.text()) == str(x[0])):          
                self.go_ahead_flg="No"
                self.login_show()
                self.label_2.hide()
            else:
                self.label_2.show()   
                self.login_hide()
                self.label_2.show()
        connection.close() 
        
    def reset_fun(self):
        self.lineEdit.setText("")
        self.frame_2.hide()
        self.label_2.hide()
        self.inactive_hide()
    
        
    def save_data(self):
        if(self.radioButton.isChecked() == True):                          
                self.b_status="INACTIVE"
        elif(self.radioButton_2.isChecked() == True):                          
                self.b_status="ACTIVE"
        else:
                self.b_status="INACTIVE"
        
        connection = sqlite3.connect("ur.db")          
        with connection:        
                cursor = connection.cursor()                    
                print("UPDATE GLOBAL_VAR_TEST SET BLUETOOTH_STATUS='"+str(self.b_status)+"'")
                cursor.execute("UPDATE GLOBAL_VAR_TEST SET BLUETOOTH_STATUS='"+str(self.b_status)+"'")
                
        connection.close()                    
        self.label_2.setText("Saved Successfully.") 
        self.label_2.show()

    def select_mac(self):        
        v_str=str(self.listWidget.currentItem().text())                      
        self.lineEdit_2.setText(str(v_str)) 
    
    def register_mac(self):
        if os.path.exists('/dev/rfcomm0') == False:
                path = 'sudo rfcomm bind 0 '+str(self.lineEdit_2.text())
                os.system (path)
                time.sleep(1)
                print("Command:"+str(path))
        else:
            try:
                nearby_devices = bluetooth.discover_devices()
                for bdaddr in nearby_devices:
                    print("Devices"+str(bdaddr))                   
                    if(str(bdaddr) == str(self.lineEdit_2.text())):
                        try:
                            s = bluetooth.BluetoothSocket(bluetooth.RFCOMM)
                            s.connect((bdaddr,1))
                            print("Connected !!!")
                            connection = sqlite3.connect("ur.db")          
                            with connection:        
                                    cursor = connection.cursor()                    
                                    #cursor.execute("UPDATE GLOBAL_VAR_TEST SET BLUETOOTH_STATUS='"+str(self.b_status)+"',MAC_ID_BTH='"+self.lineEdit_2.text()+"'")
                                    cursor.execute("UPDATE GLOBAL_VAR_TEST SET MAC_ID_BTH='"+self.lineEdit_2.text()+"'")                
                            connection.close()                    
                            self.label_6.setText("Connected...Check Data.") 
                            self.label_6.show()
                            print("Connected :"+self.lineEdit_2.text())
                            self.pushButton_13_1.setEnabled(True)
                            self.pushButton_13.setDisabled(True)
                        except bluetooth.btcommon.BluetoothError as err:
                            # Error handler
                            self.label_6.setText("Connection Error.") 
                            self.label_6.show()
                            self.pushButton_13_1.setDisabled(True)
                            self.pushButton_13.setEnabled(True)
                            print("Connection Error !!!")
                            pass
            except:
                    self.label_6.setText("Bluetooth Off.") 
                    self.label_6.show()
                    self.pushButton_13_1.setDisabled(True)
                    self.pushButton_13.setEnabled(True)
                    print("Bluetooth Off")   
                
                

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = urmini_20_Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

